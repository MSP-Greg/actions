name: stable-snapshot

on:
  schedule:
    - cron: '30 12 * * *' # Daily at 12:30 UTC
  repository_dispatch:
    types: "make-snapshot"

jobs:
  dump-context:
    runs-on: ubuntu-latest
    steps:
      - run: env | sort
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

  stable-snapshot:
    runs-on: ubuntu-latest
    steps:
      - name: Install libraries
        run: |
          set -x
          sudo apt-get update -q || :
          sudo apt-get install --no-install-recommends -q -y build-essential git bison autoconf ruby p7zip-full curl
      - name: Checkout ruby/ruby for tool/make-snapshot
        run: git clone --depth=1 https://github.com/ruby/ruby ruby
      - name: Checkout ruby_2_6
        run: git clone --single-branch --shallow-since='2017-12-25 00:00:00' --branch=ruby_2_6 https://github.com/ruby/ruby ruby_2_6
      - name: Fetch notes
        run: cd ruby_2_6 && git fetch origin +refs/notes/commits:refs/notes/commits
      - name: Make stable-snapshot
        run: ruby ruby/tool/make-snapshot -archname=stable-snapshot -srcdir=ruby_2_6 pkg stable
      - uses: actions/upload-artifact@master
        with:
          name: Packages
          path: pkg
      - uses: actions/upload-artifact@master
        with:
          name: Info
          path: pkg/info
      - name: Check pkg
        run: |
          set -x
          ls -al pkg
          7z x pkg/stable-snapshot.zip stable-snapshot/revision.h
          cat stable-snapshot/revision.h
          7z l pkg/stable-snapshot.zip stable-snapshot/ChangeLog
      - name: Upload s3
        run: |
          set -x
          for ext in .tar.gz .tar.bz2 .tar.xz .zip; do
            aws s3 cp "pkg/stable-snapshot$ext" "s3://ftp.r-l.o/pub/ruby/stable-snapshot$ext" --no-progress
            curl -sS -X PURGE -H "Fastly-Soft-Purge:1" "https://cache.ruby-lang.org/pub/ruby/stable-snapshot$ext"
          done
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.FTP_R_L_O_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FTP_R_L_O_AWS_SECRET_ACCESS_KEY }}
      - uses: k0kubun/action-slack@v2.0.0
        with:
          payload: |
            {
              "attachments": [{
                "text": "${{ job.status }}: <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}|${{ github.workflow }} stable-snapshot>",
                "color": "danger"
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SNAPSHOT_SLACK_WEBHOOK_URL }}
        if: failure()
